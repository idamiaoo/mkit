package di

import (
	"net/http"

	"github.com/pescaria/pkg/balancer/weightedroundrobin"
	"{{.ModPrefix}}{{.Name}}/internal/service"

	grpctracing "github.com/opentracing-contrib/go-grpc"
	"github.com/opentracing/opentracing-go"
	"google.golang.org/grpc"
)

//go:generate wire
type App struct {
	svc  *service.Service
	http *http.Server
	grpc *grpc.Server
}

// NewDialOptions 设置 grpc dial 选项
func NewDialOptions() (opts []grpc.DialOption, err error) {
	opts = []grpc.DialOption{
		grpc.WithInsecure(),
		grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(10 * 1024 * 1024)),
		grpc.WithDefaultCallOptions(grpc.MaxCallSendMsgSize(10 * 1024 * 1024)),
		grpc.WithBalancerName(weightedroundrobin.Name),
		grpc.WithUnaryInterceptor(
			grpctracing.OpenTracingClientInterceptor(opentracing.GlobalTracer())),
	}
	return
}

func NewApp(svc *service.Service, h *http.Server, g *grpc.Server) (app *App, closeFunc func(), err error) {
	app = &App{
		svc:  svc,
		http: h,
		grpc: g,
	}

	closeFunc = func() {

	}
	return
}

