package http

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"time"

	"github.com/gin-gonic/gin"
	log "github.com/sirupsen/logrus"
)

const (
	responseBodyKey = "response_body"
)

func loggerHandler(c *gin.Context) {
	// Start timer
	start := time.Now()

	body, _ := ioutil.ReadAll(c.Request.Body)
	_ = c.Request.Body.Close()
	log.WithFields(log.Fields{
		"request_id": c.Writer.Header().Get("X-Request-ID"),
		"method":     c.Request.Method,
		"path":       c.Request.URL.Path,
		"query":      c.Request.URL.RawQuery,
		"client_ip":  c.ClientIP(),
		"body":       string(body),
	}).Info("http request")
	c.Request.Body = ioutil.NopCloser(bytes.NewBuffer(body))

	// Process request
	c.Next()
	// Stop timer
	end := time.Now()
	log.WithFields(log.Fields{
		"request_id":  c.Writer.Header().Get("X-Request-ID"),
		"status_code": c.Writer.Status(),
		"body":        c.GetString(responseBodyKey),
		"cost_time":   fmt.Sprintf("%v", end.Sub(start)),
	}).Info("http response")
}
